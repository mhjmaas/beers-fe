apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: Beers Api Application
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME_API}
      part: be
    name: ${NAME_API}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig:  ${NAME_API}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME_API}
      part: be
    name: ${NAME_API}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: beers-api
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: ${NAME_API}
      spec:
        containers:
        - env:
          - name: DB_HOST
            value: mongo
          - name: DB
            value: beers
          - name: PORT
            value: "8080"
          image: image-registry.openshift-image-registry.svc:5000/beers-development/beers-api
          imagePullPolicy: Always
          name: beers-api
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - beers-api
        from:
          kind: ImageStreamTag
          name: ${NAME_API}:latest
      type: ImageChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${NAME_API}
      part: be
    name: ${NAME_API}
  spec:
    failedBuildsHistoryLimit: 5
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME_API}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/mhjmaas/beers-api.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:14-ubi8
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: ZpbwsCmRpOGDYY_2IFUR
      type: GitHub
    - generic:
        secret: wKAR77dFlpGUqcUNJ8-u
      type: Generic
    - type: ConfigChange
    - imageChange:
      type: ImageChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${NAME_API}
      part: be
    name: ${NAME_API}
  spec:
    lookupPolicy:
      local: false
parameters:
  - name: NAME_API
    description: "The name of the api applications"
    value: "beers-api"
